import{g as y,b as g}from"./navigation.e2d51015.js";const p=async()=>{const t=[c(window.location)];await y(window.location.toString(),{replaceState:!0,state:{...history.state,stack:t}}),console.log("initialized stack::",history.state.stack)},c=t=>`${t.pathname}${t.search}${t.hash}`,u=()=>g(async t=>{if(t.type==="link"){if(t.to===null||t.to.url.protocol!==window.location.protocol||t.to.url.host!==window.location.host)return;t.cancel(),await l(t.to.url.toString())}});async function m(){var t,e;if(!Array.isArray((t=history.state)==null?void 0:t.stack)||((e=history.state)==null?void 0:e.stack.length)===0)throw new Error("History API not properly configured!");window.location.search!==""||window.location.hash!==""?await l(window.location.pathname):await l(window.location.pathname.replace(/\/[^/]+\/?$/,""))}async function l(t,e={}){var d,f;const s=new URL(t,window.location.href);if(s.protocol!==window.location.protocol||s.host!==window.location.host)throw new Error("Navigating away from site, cannot be performed by stackGo.");if(!Array.isArray((d=history.state)==null?void 0:d.stack)||((f=history.state)==null?void 0:f.stack.length)===0)throw new Error("History API not properly configured!");const{stack:i}=history.state,w=c(s);let o=i.findLastIndex(a=>w.startsWith(a));for(;!(o<0||!(new URL(i[o],window.location.href).search!==""));)o--;let n=0,r=!1;o===-1?(n=i.length-1,r=!0):(n=i.length-o-1,i[o]===w?r=!0:n===1&&(n=0,r=!0));const h=async()=>{const a=r?[...i.slice(0,o),c(s)]:[...i.slice(0,o+1),c(s)];console.log("go:::",a);debugger;await y(t,{...e??{},replaceState:r,state:{...history.state,...(e==null?void 0:e.state)??{},stack:a}})};if(n>0){const a=()=>{window.removeEventListener("popstate",a),h()};window.addEventListener("popstate",a),history.go(-n)}else await h()}export{m as a,u as c,p as i,l as s};
